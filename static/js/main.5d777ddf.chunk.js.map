{"version":3,"sources":["components/SearchBar/index.js","constants/endpoints.js","services/httpService.js","components/GridItem/index.js","components/ListItem/index.js","components/DIrectoryViewer/index.js","components/FileDetailsModal/index.js","components/SideBar/index.js","screens/Home/index.js","screens/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","type","className","value","onChange","placeholder","GET_DIRECTORY","get","url","axios","GridItem","directory","onClick","isDirectory","size","color","name","ListItem","path","lastModified","DirectoryViewer","viewType","directories","filter","dir","fileType","map","handleDirectoryClick","customStyles","content","top","left","right","marginLeft","bottom","transform","overflowY","padding","minWidth","minHeight","overlay","backgroundColor","FileDetailsModal","open","onModalClose","isOpen","onRequestClose","style","Date","lastAccessed","SideBar","setFileType","checked","Home","useState","searchText","setSearchText","setDirectories","setViewType","modalOpen","setModalOpen","selectedFile","setSelectedFile","useEffect","a","httpService","process","data","getDirectory","fetchDirectory","useCallback","debounce","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d777ddf.chunk.js","sourcesContent":["import './index.css';\n\nconst SearchBar = (props) => (\n  <input\n    type=\"text\"\n    className=\"search-bar\"\n    value={props.value}\n    onChange={props.onChange}\n    placeholder={props.placeholder}\n  />\n);\n\nexport default SearchBar;","export const GET_DIRECTORY = '/directories'","import axios from \"axios\";\n\nexport const get = (url) => {\n  return axios.get(url);\n};\n","import {FaFile, FaFolder} from 'react-icons/fa';\nimport './style.css';\n\nconst GridItem = ({directory,onClick}) => (\n  <button onClick={onClick} className={\"grid-item link\"}>\n    <div className=\"grid-item-icon-wrapper\">\n      {directory.isDirectory ? (\n        <FaFolder size={48} />\n      ) : (\n        <FaFile color={\"#c1cad2\"} size={48} />\n      )}\n    </div>\n    <p className=\"grid-item-text\">{directory.name}</p>\n  </button>\n);\n\nexport default GridItem;\n","import { FaFile, FaFolder } from \"react-icons/fa\";\nimport \"./style.css\";\n\nconst ListItem = ({directory, onClick}) => (\n  <button onClick={onClick} className=\"list-item link\">\n    <div className=\"list-item-icon-wrapper\">\n      {directory.isDirectory ? (\n        <FaFolder size={16} />\n      ) : (\n        <FaFile color={\"#c1cad2\"} size={16} />\n      )}\n    </div>\n    <div className=\"list-item-name-wrapper\">{directory.name}</div>\n    <div className=\"list-item-path-wrapper\">{directory.path}</div>\n    <div className=\"list-item-modified-wrapper\">\n      Last Modified: {directory.lastModified}\n    </div>\n    <div className=\"list-item-size-wrapper\">Size: {directory.size} Bytes</div>\n  </button>\n);\n\nexport default ListItem;\n","import GridItem from \"../GridItem\";\nimport ListItem from \"../ListItem\";\n\nconst DirectoryViewer = (props) => {\n  const renderGridView = () => {\n    return props.directories\n      .filter((dir) => {\n        switch (props.fileType) {\n          case 1:\n            return !dir.isDirectory;\n          case 2:\n            return dir.isDirectory;\n          default:\n            return dir;\n        }\n      })\n      .map((directory) => (\n        <GridItem\n          directory={directory}\n          onClick={() => {\n            props.handleDirectoryClick(directory);\n          }}\n        />\n      ));\n  };\n\n  const renderListView = () => {\n    return props.directories.map((directory) => (\n      <ListItem\n        directory={directory}\n        onClick={() => {\n          props.handleDirectoryClick(directory);\n        }}\n      />\n    ));\n  };\n\n  return props.viewType === 0 ? renderGridView() : renderListView();\n};\n\nexport default DirectoryViewer;\n","import Modal from \"react-modal\";\nimport { FaFile } from \"react-icons/fa\";\n\nimport \"./style.css\";\n\nconst customStyles = {\n  content: {\n    top: \"40%\",\n    left: \"auto\",\n    right: \"0%\",\n    marginLeft: \"-20%\",\n    bottom: \"auto\",\n    transform: \"translate(-50%, -50%)\",\n    overflowY: \"auto\",\n    padding: 0,\n    minWidth: 300,\n    minHeight: 500,\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n};\n\nconst FileDetailsModal = (props) => {\n  const { open, directory, onModalClose } = props;\n\n  return (\n    <Modal isOpen={open} onRequestClose={onModalClose} style={customStyles}>\n      <div className={\"modal-wrapper\"}>\n        <div className=\"modal-header\">\n          <h1 className=\"\">File Details</h1>\n        </div>\n        <div className=\"modal-image\">\n          <FaFile size={64} color={\"#c1cad2\"} />\n        </div>\n        <div className=\"modal-body\">\n          <div className=\"modal-body-item\">\n            <p className={\"modal-body-item-title\"}>Name:</p>\n            <p className={\"modal-body-item-content\"}>\n              {directory ? directory.name : \"\"}\n            </p>\n          </div>\n          <div className=\"modal-body-item\">\n            <p className={\"modal-body-item-title\"}>Path:</p>\n            <p className={\"modal-body-item-content\"}>\n              {directory ? directory.path : \"\"}\n            </p>\n          </div>\n          <div className=\"modal-body-item\">\n            <p className={\"modal-body-item-title\"}>Size:</p>\n            <p className={\"modal-body-item-content\"}>\n              {directory ? directory.size+\" Bytes\" : \"\"}\n            </p>\n          </div>\n          <div className=\"modal-body-item\">\n            <p className={\"modal-body-item-title\"}>Last Accessed:</p>\n            <p className={\"modal-body-item-content\"}>\n              {directory ? Date(directory.lastAccessed) : \"\"}\n            </p>\n          </div>\n          <div className=\"modal-body-item\">\n            <p className={\"modal-body-item-title\"}>Last Modified:</p>\n            <p className={\"modal-body-item-content\"}>\n              {directory ? Date(directory.lastModified) : \"\"}\n            </p>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FileDetailsModal;\n","import \"./style.css\";\n\nconst SideBar = ({ fileType, setFileType }) => (\n  <div className=\"sidebar\">\n    <h1>filters</h1>\n    <div className=\"filter-directory-type\">\n      <label className=\"filter-directory-type-label\">Directory Type:</label>\n      <div className=\"filter-wrapper\">\n        <div className=\"filter-item\">\n          <label>All</label>\n          <input\n            type=\"radio\"\n            name=\"file-type\"\n            className=\"filter-radio\"\n            checked={fileType === 0}\n            onChange={() => {\n              setFileType(0);\n            }}\n          />\n        </div>\n        <div className=\"filter-item\">\n          <label>Files</label>\n          <input\n            type=\"radio\"\n            name=\"file-type\"\n            className=\"filter-radio\"\n            checked={fileType === 1}\n            onChange={() => {\n              setFileType(1);\n            }}\n          />\n        </div>\n        <div className=\"filter-item\">\n          <label>Folders</label>\n          <input\n            type=\"radio\"\n            name=\"file-type\"\n            className=\"filter-radio\"\n            checked={fileType === 2}\n            onChange={() => {\n              setFileType(2);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default SideBar;\n","import Home from './Home';\n\nexport default Home;","import { useCallback, useEffect, useState } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { FaTh, FaThList } from \"react-icons/fa\";\n\nimport SearchBar from \"../../components/SearchBar\";\n\nimport { GET_DIRECTORY } from \"../../constants/endpoints\";\nimport * as httpService from \"../../services/httpService\";\n\nimport DirectoryViewer from \"../../components/DIrectoryViewer\";\nimport FileDetailsModal from \"../../components/FileDetailsModal\";\nimport SideBar from \"../../components/SideBar\";\n\nconst Home = () => {\n  const [searchText, setSearchText] = useState(\"/\");\n  const [directories, setDirectories] = useState([]);\n  const [viewType, setViewType] = useState(0);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileType, setFileType] = useState(0);\n\n  useEffect(() => {\n    async function getDirectory() {\n      try {\n        const { data } = await httpService.get(\n          `${process.env.REACT_APP_API_BASE_URL}${GET_DIRECTORY}?directory=${searchText}`\n        );\n        setDirectories(data.data);\n      } catch (error) {\n        setDirectories([]);\n      }\n    }\n\n    getDirectory();\n  }, []);\n\n  const fetchDirectory = useCallback(\n    debounce(async (value) => {\n      try {\n        const { data } = await httpService.get(\n          `${process.env.REACT_APP_API_BASE_URL}${GET_DIRECTORY}?directory=${value}`\n        );\n        setDirectories(data.data);\n      } catch (error) {\n        setDirectories([]);\n      }\n    }, 1000),\n    []\n  );\n\n  const handleSearchChange = (e) => {\n    setSearchText(e.target.value);\n    fetchDirectory(e.target.value);\n  };\n\n  const handleDirectoryClick = (directory) => {\n    if (directory.isDirectory) {\n      const path = `${searchText}/${directory.name}`;\n      setSearchText(path);\n      fetchDirectory(path);\n    } else {\n      setSelectedFile(directory);\n      setModalOpen(true);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className={\"header-left\"}>\n          <h1>Server Directory</h1>\n        </div>\n        <div className={\"header-center\"}>\n          <SearchBar\n            placeholder={\"Search Directory:\"}\n            value={searchText}\n            onChange={handleSearchChange}\n          />\n        </div>\n        <div className={\"header-right\"}>\n          <button\n            onClick={() => {\n              setViewType(0);\n            }}\n            className={\"link select-view-icon\"}\n          >\n            <FaTh color={viewType === 0 ? \"#309bed\" : \"#fff\"} size={22} />\n          </button>\n          <button className={\"link select-view-icon\"}>\n            <FaThList\n              onClick={() => {\n                setViewType(1);\n              }}\n              color={viewType === 1 ? \"#309bed\" : \"#fff\"}\n              size={22}\n            />\n          </button>\n        </div>\n      </div>\n      <div className=\"content\">\n        <SideBar fileType={fileType} setFileType={setFileType} />\n        <div className=\"main\">\n          <DirectoryViewer\n            handleDirectoryClick={handleDirectoryClick}\n            directories={directories}\n            viewType={viewType}\n            fileType={fileType}\n          />\n        </div>\n      </div>\n      <FileDetailsModal\n        open={modalOpen}\n        onModalClose={() => {\n          setModalOpen(false);\n        }}\n        directory={selectedFile}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","import './styles/reset.css';\nimport './styles/layout.css';\nimport './styles/style.css';\n\nimport Home from './screens/Home';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}